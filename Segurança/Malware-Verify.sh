#!/bin/bash

# Este script usa a variável de ambiente fornecida pelo Nautilus/Nemo/Caja
# para processar os caminhos dos arquivos selecionados.

# Define o nome da aplicação para as notificações
#APP_NAME="VirusTotal"

# Uma alternativa mais simples e robusta para caminhos separados por quebra de linha (LF):
IFS=$'\n' read -r -d '' -a FILENAME <<< "$NAUTILUS_SCRIPT_SELECTED_FILE_PATHS"

# Itera sobre cada arquivo
for file in "${FILENAME[@]}"; do
    # Certifica-se de que o nome do arquivo não está vazio, 
    # e remove qualquer espaço em branco de liderança/final que possa ter sobrado.
    file="$(echo -e "${file}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
    if [ -z "$file" ]; then
        continue # Pula se o caminho estiver vazio
    fi

    # Define um nome de arquivo temporário.
    temp_file="/tmp/vt_scan_$(basename "$file" | tr -cd '[:alnum:]_.-').txt"

    # Notifica que a análise começou
    #notify-send "Análise de Arquivo em Andamento" "Enviando '$file' para o VirusTotal." --app-name="$APP_NAME"
    
    
    # Executa a varredura e salva a saída no arquivo temporário
    # O comando é executado em segundo plano para que as notificações possam ocorrer rapidamente.
    # O -w (wait) faz com que o script espere, o que é bom para obter o resultado imediatamente.
    (
    vt scan file -w "$file" -v > "$temp_file" 2>&1 &
    wait $!
    ) | zenity --progress \
           --title="Analizando arquivo!" \
           --text="Operação em andamento..." \
           --pulsate \
           --auto-close


    # 3. Verifica o resultado usando 'grep'
    # O 'grep -owq' pesquisa a string e retorna o código de saída 0 (sucesso) se encontrar.
    if grep -owq "detected" "$temp_file"; then
        zenity --info --title="Analise completa!" \
            --text="$(echo -e "⚠️ Malware Detectado! \nO arquivo '$file' pode estar infectado.")"
        #notify-send "⚠️ Malware Detectado" "O arquivo '$file' pode estar infectado." --app-name="$APP_NAME"
    else
        zenity --info --title="Analise completa!" \
            --text="$(echo -e "✅ Arquivo Limpo \nO arquivo '$file' parece estar limpo.")"
        #notify-send "✅ Arquivo Limpo" "O arquivo '$file' parece estar limpo." --app-name="$APP_NAME"
    fi

done
